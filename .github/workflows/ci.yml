name: CI - Build and Lint

# Triggers del workflow
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

# Variables de ambiente globales
env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx2048m -XX:MaxMetaspaceSize=512m"

jobs:
  # Job 1: Build y Linting
  build-and-lint:
    name: Build & Lint Check
    runs-on: ubuntu-latest
    
    steps:
    # Checkout del código
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Setup de Java 17 (requerido para proyectos Android modernos)
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    # Dar permisos de ejecución al gradlew
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    # Cache de Gradle para acelerar builds
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    # Linting con Ktlint (Kotlin Code Style)
    - name: Run Ktlint
      run: ./gradlew ktlintCheck
      continue-on-error: false

    # Android Lint Check
    - name: Run Android Lint
      run: ./gradlew lintDebug
      continue-on-error: false

    # Compilación del proyecto
    - name: Build with Gradle
      run: ./gradlew assembleDebug

    # Ejecutar pruebas unitarias
    - name: Run Unit Tests
      run: ./gradlew testDebugUnitTest

    # Generar reporte de coverage (opcional)
    - name: Generate Test Coverage Report
      run: ./gradlew jacocoTestReport
      continue-on-error: true

    # Upload de artefactos
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: app/build/outputs/apk/debug/*.apk
        retention-days: 5

    # Upload de reportes de lint
    - name: Upload Lint Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-report
        path: |
          app/build/reports/lint-results*.html
          app/build/reports/lint-results*.xml
        retention-days: 5

    # Upload de reportes de tests
    - name: Upload Test Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports
        path: |
          app/build/reports/tests/
          app/build/test-results/
        retention-days: 5

  # Job 2: Security Check
  security-check:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: build-and-lint
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Dependency Check para vulnerabilidades
    - name: Run Dependency Check
      run: ./gradlew dependencyCheckAnalyze
      continue-on-error: true

    # Detekt para análisis estático de código
    - name: Run Detekt
      run: ./gradlew detekt
      continue-on-error: true

    # Upload reportes de seguridad
    - name: Upload Security Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          app/build/reports/detekt/
          app/build/reports/dependency-check-report.html
        retention-days: 10

  # Job 3: Code Quality (opcional, más avanzado)
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: build-and-lint
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    # SonarCloud analysis (requiere configuración adicional)
    - name: SonarCloud Scan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        if [ -n "$SONAR_TOKEN" ]; then
          ./gradlew sonarqube
        else
          echo "SonarCloud token not configured, skipping analysis"
        fi
      continue-on-error: true
